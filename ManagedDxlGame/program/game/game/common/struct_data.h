#pragma once

// =====================================================================================
// 区画のデータ
// =====================================================================================
struct Rect {
	// 区画の始点座標、終点座標
	int x = 0;
	int y = 0;
	int width = 0;
	int height = 0;

};

// =====================================================================================
// 部屋の入口のデータ
// =====================================================================================
struct Entrance {
	tnl::Vector3 pos = { 0, 0, 0 };
	int id = 0;
};

// =====================================================================================
// 部屋のデータ
// =====================================================================================
struct Room {
	// 区画の始点座標、終点座標
	int x = 0;
	int y = 0;
	int width = 0;
	int height = 0;

	// 入口の数
	int entrance_count = 0;

	// 部屋の入口の位置
	std::vector<Entrance> entrance;

};

// =====================================================================================
// エリアデータ
// =====================================================================================
struct Area {
	Rect area;
	Room room;

	// 通路が存在するかの判定
	eDir_4 connect_area_dir = eDir_4::NONE;

	int connect_area_index = -1;
	bool is_connect = false;
};

// =====================================================================================
// ダンジョンの1マスのデータ
// =====================================================================================
struct DungeonCell {
	// エリアの番号
	int area_id = 0;

	// 場所（ 通路なのか、部屋なのか ）
	ePlace place = ePlace::WALL;

	// マップのデータ（ 衝突判定用 ）
	eMapData map_data = eMapData::WALL;

	// 地形データ（ 床、壁 ）
	eMapData terrain_data = eMapData::WALL;

	// セルを表示するか判定（ ミニマップ用 ）
	bool is_display_cell = false;
};

// =====================================================================================
// ミニマップの1マスのデータ
// =====================================================================================
struct MiniMapCell {
	// マップのデータ（ 衝突判定用 ）
	eMapData map_data = eMapData::WALL;

	// 地形データ（ 床、壁 ）
	eMapData terrain_data = eMapData::WALL;

	// セルを表示するか判定（ ミニマップ用 ）
	bool is_display_cell = false;
};